version: "3.9"

x-logging:
  &default-logging
    driver: journald

services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    networks:
      default:
    volumes:
      - database:/var/lib/postgresql/data
      - ./backup/:/backup/
      - ../volumes/auth_backup/:/backup_data/
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    env_file:
      - .env
    logging: *default-logging
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      default:
    volumes:
      - redis:/data
    logging: *default-logging
  server:
    image: authentik-mccullerlab
      # image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.5.4}
    build:
      context: './'
      # args:
      #  APACHE_VERSION: ${APACHE_VERSION}
    restart: unless-stopped
    command: server
    networks:
      default:
          aliases:
            - users.docker.local
            - users.mccullerlab.com
            - authentik-server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - ./media:/media
      - ./authentik_built/:/authentik_built/
      # - ./authentik_built/:/authentik/
      - ./custom-templates:/templates
    env_file:
      - .env
    logging: *default-logging
    # ports:
    #   - "${COMPOSE_PORT_HTTP:-9000}:9000"
    #   - "${COMPOSE_PORT_HTTPS:-9443}:443"
    depends_on:
      - postgresql
      - redis
  worker:
    image: authentik-mccullerlab
    # image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.5.4}

    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    # - this works but is dangerious
    # user: root
    networks:
      default:
    volumes:
      # need docker proxy to want to use this
      # - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    env_file:
      - .env
    # the worker doesn't need to be externally exposed
    # ports:
    #   - "9001:9000"
    #   - "9444:9443"
    logging: *default-logging
    depends_on:
      - postgresql
      - redis
      - server

networks:
  default:

volumes:
  database:
    driver: local
  redis:
    driver: local
